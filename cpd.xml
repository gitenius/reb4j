<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="73" tokens="352">
<file line="14" path="c:\Users\Rich\git\reb4j\src\main\java\io\github\reggert\reb4j\CharLiteral.java"/>
<file line="13" path="c:\Users\Rich\git\reb4j\src\main\java\io\github\reggert\reb4j\Entity.java"/>
<codefragment>
<![CDATA[
	{this.unescapedChar = unescapedChar;}

	@Override
	public Quantified anyTimes()
	{return Quantified.anyTimes(this);}

	@Override
	public Quantified anyTimesReluctantly()
	{return Quantified.anyTimesReluctantly(this);}

	@Override
	public Quantified anyTimesPossessively()
	{return Quantified.anyTimesPossessively(this);}

	@Override
	public Quantified atLeastOnce()
	{return Quantified.atLeastOnce(this);}

	@Override
	public Quantified atLeastOnceReluctantly()
	{return Quantified.atLeastOnceReluctantly(this);}

	@Override
	public Quantified atLeastOncePossessively()
	{return Quantified.atLeastOncePossessively(this);}

	@Override
	public Quantified optional()
	{return Quantified.optional(this);}

	@Override
	public Quantified optionalReluctantly()
	{return Quantified.optionalReluctantly(this);}

	@Override
	public Quantified optionalPossessively()
	{return Quantified.optionalPossessively(this);}

	@Override
	public Quantified repeat(final int n)
	{return Quantified.repeat(this, n);}

	@Override
	public Quantified repeatReluctantly(final int n)
	{return Quantified.repeatReluctantly(this, n);}

	@Override
	public Quantified repeatPossessively(final int n)
	{return Quantified.repeatPossessively(this, n);}

	@Override
	public Quantified repeat(final int min, final int max)
	{return Quantified.repeat(this, min, max);}

	@Override
	public Quantified repeatReluctantly(final int min, final int max)
	{return Quantified.repeatReluctantly(this, min, max);}

	@Override
	public Quantified repeatPossessively(final int min, final int max)
	{return Quantified.repeatPossessively(this, min, max);}

	@Override
	public Quantified atLeast(final int n)
	{return Quantified.atLeast(this, n);}

	@Override
	public Quantified atLeastReluctantly(final int n)
	{return Quantified.atLeastReluctantly(this, n);}

	@Override
	public Quantified atLeastPossessively(final int n)
	{return Quantified.atLeastPossessively(this, n);}
]]>
</codefragment>
</duplication>
</pmd-cpd>